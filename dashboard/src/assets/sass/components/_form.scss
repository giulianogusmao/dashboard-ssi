input, select, textarea, .form-control {
  border-radius: $input-border-radius;
  padding: 0 16px;
  border: $input-border;
  min-height: $input-min-height;
  border-color: $input-border-color;
  color: $cor-text-form;
  font-size: $font-size-form;
}

input, textarea {
  &:focus {
    box-shadow: 0 1px 0 0 $cor-blue-2;
  }
}

.form-horizontal {
  .control-label, .form-control-static {
    padding-top: $label-padding-top;
    padding-right: 0;
    margin-bottom: .5rem;
  }

  .radio-inline, .checkbox {
    min-height: $input-min-height;
    padding-top: $label-padding-top;

    input[type=radio], input[type=checkbox] {
      margin-top: -$label-padding-top;
    }

    @media screen and (max-width: $screen-xs-max) {
      display: block;
      margin: 0;
      padding-top: .5rem;
      min-height: 3.5rem;
    }
  }

  @media screen and (max-width: $screen-sm-max){
    .form-group {
      margin-bottom: .5rem;
    }
  }
}


// radio
// ------------------------------------
.form-group.custom-radio {
  .radio {
    input[type=radio], input[type=checkbox] {
      position: absolute;
      visibility: hidden;
    }

    label{
      cursor: pointer;
      padding-left: .5rem;
    }

    &:hover label{
      color: $cor-black-900;
    }

    & .check{
      display: block;
      position: absolute;
      border: $input-border;
      border-color: $cor-blue-1;
      border-radius: 100%;
      height: $input-radio-xy;
      width: $input-radio-xy;
      left: 0;
    }

    & .check::before {
      display: block;
      position: absolute;
      content: '';
      border-radius: 100%;
      height: $input-radio-check-xy;
      width: $input-radio-check-xy;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  // input[type=radio]:checked ~ .check {
  //   border: .1rem solid $cor-blue-3;
  // }

  input[type=radio]:checked ~ .check::before {
    background: $cor-blue-1;
  }

  // input[type=radio]:checked ~ label {
  //   color: $cor-black-1;
  // }
}

.custom-checkbox {
  position: absolute; // take it out of document flow
  opacity: 0; // hide it
  margin: 0 !important;
  min-height: 0;

  & + label {
    position: relative;
    cursor: pointer;
    padding: 0;
  }

  // Box.
  & + label:before {
    content: '';
    margin-right: 1rem;
    display: inline-block;
    vertical-align: text-top;
    width: 2rem;
    height: 2rem;
    background: white;
    border: .1rem solid $cor-default;
  }

  // Box hover
  &:hover + label:before {
    background: $cor-default;
  }

  // Box focus
  &:focus + label:before {
    box-shadow: 0 0 0 .3rem rgba(0, 0, 0, 0.12);
  }

  // Box checked
  &:checked + label:before {
    background: $cor-default;
  }

  // Disabled state label.
  &:disabled + label {
    color: #b8b8b8;
    cursor: auto;
  }

  // Disabled box.
  &:disabled + label:before {
    box-shadow: none;
    background: #ddd;
  }

  // Checkmark. Could be replaced with an image
  &:checked + label:after {
    content: '';
    position: absolute;
    left: .5rem;
    top: .9rem;
    background: white;
    width: .2rem;
    height: .2rem;
    box-shadow:
      .2rem 0 0 white,
      .4rem 0 0 white,
      .4rem -.2rem 0 white,
      .4rem -.4rem 0 white,
      .4rem -.6rem 0 white,
      .4rem -.8rem 0 white;
    transform: rotate(45deg);
  }
}


// input-group
.input-group {
  height: $input-min-height;

  input {
    height: 100%;
    min-height: $input-min-height;
  }

  &.no-border {
    input, select, .input-group-btn {
      border: none !important;
      box-shadow: none;
    }
  }

  .input-group-addon-telefonica {
    border: $input-border;
    border-left: 0;
    background-color: rgba($cor-black-100, 1);
    border-radius: $input-border-radius;
    .form-group:not(.has-error) & {
      border-color: $input-border-color;
    }
  }


  input {
    border-right: 0;
    box-shadow: none;
  }
}
